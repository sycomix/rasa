language: python
sudo: enabled
dist: xenial
cache:
  directories:
  - $HOME/.cache/pip
  - .pytype
python: '3.6'
env:
  global:
    - BOTO_CONFIG=/dev/null
    - PIP_USE_PEP517=false
    - PYPI_USER=amn41
    - secure: "OWe6Fd/tXcCNvRBMJvFIXtDpnA0rQMFE/rLrzEZqmR9KOZs5dfEu3Bb7SW/22iIsAxSUjvGlqlcdp+QBPAw1XiD17aAJYvbCxh+c6xo264PyHOIhKzac23vmEzFr97LT3LKRIr1wULqGN05wMPGdzK7QK03aXfIRneBOphHM7fbT0Hl8zBTL7YwSuaA+Xic67fIFcd75Ynq8SGP1Gmoyu7NFfWRGxhL5+tPR+iuGkGfGf6nOBl0h9bfwU3moR9cVIe3mrcllcp5TonxfDtS8i7Mgs/jxCyNqWP1PufaLZVM/iFG9s25Yzpy478EH0rhLPRWAfXnTVov/5KOMrVSc1jrrO3eyxVXxubwAemgd4RTT6tihzZunAdFVQL0NTT78uPpqofJrvI0HAFt+0jJz4Ok+KFSqHjTPqSmndD1CtFh3hdIRydpV+Yp/ixC3c60gPTT+hydFtg3nARk+BPdUed0iF8j0AnPfDzW5QNKsYYFudm7FfjdOtCIu/tdKckfdh2mk+q4PcqJtgz97gc8b+X3l87bJFNmIWAIGMpKzK788N+EB18JR4gIOi6WqynUJaeq965lNIoDQtCxI/w7iRegE3UlRf/WZXUgL8jgN6w/EQXJDGZBkBi7W51AXuVYMvh7YK94j1IvXar6oNhYFqjsYW02vLgnG8Nwx3YR1Zr8="
install:
  # The instructions listed here should be equivalent to the ones
  # listed in README.md!
  - sudo apt-get update -qq
  # Pip 20.0.1 breaks our build script when installing one of the
  # dependencies in requirements-dev.txt (ninja 1.9.0.post1).  For the
  # moment, use pip 19 to install them.
  - python -m pip install -U 'pip<20'
  - pip install poetry~=1.0.3
  - poetry install
  - make prepare-tests-ubuntu
before_script:
  - mkdir $HOME/tmp
  - export TMPDIR=$HOME/tmp
jobs:
  include:
  - stage: test
    name: "Code Formatting"
    python: 3.6
    script:
    - make lint
  - stage: test
    name: "Type Check"
    python: 3.6
    script:
    - make types
  - &run-tests
    stage: test
    name: "Test 3.6"
    python: "3.6"
    script:
    - make test
  - <<: *run-tests
    name: "Test 3.7"
    python: '3.7'
    after_success:
    - poetry run coveralls   # only this version will submit results to coveralls
  - stage: integration
    name: "Test API specification"
    language: python
    install:
    - npm install -g swagger-cli
    script:
    - swagger-cli validate docs/_static/spec/action-server.yml
    - swagger-cli validate docs/_static/spec/rasa.yml
  - stage: test
    name: "Test Docs"
    script:
      # be strict about warnings --> they will be treated as errors
    - cd docs
    - make SPHINXOPTS="-W --keep-going -A html_theme=rasabaster" html
  - stage: docs
    if: fork = false AND branch = "master" # forked repository will skip building docs, only master & PRs to it
    script:
    - eval "$(ssh-agent -s)"; touch docs_key; chmod 0600 docs_key
    - openssl aes-256-cbc
      -K $encrypted_1708c37fe733_key
      -iv $encrypted_1708c37fe733_iv
      -in secrets.tar.enc
      -out secrets.tar
      -d
    - tar -xvf secrets.tar
    - ssh-add docs_key
    - git config --global user.email "builds@travis-ci.com"
    - git config --global user.name "Travis CI"
    - git remote set-url --push origin "git@github.com:$TRAVIS_REPO_SLUG"
    - export ${!TRAVIS*}
    - poetry run sphinx-versioning push docs docs . -- -b dirhtml -A html_theme=rasabaster
  - stage: deploy
    name: "Deploy to PyPI"
    python: 3.6
    if: tag IS present
    install: poetry install --extras gh-release-notes
    script: skip
    before_deploy:
    - poetry config http-basic.pypi $PYPI_USER $PYPI_PASSWORD
    - poetry build
    deploy:
    - provider: script
      script: poetry publish
      on:
        branch: master
    after_deploy:
    - poetry run python scripts/publish_gh_release_notes.py
    - poetry run python scripts/ping_slack_about_package_release.sh
